// worker table 
+-----------+------------+-----------+--------+--------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE | DEPARTMENT |
+-----------+------------+-----------+--------+--------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20   | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-02-11   | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20   | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20   | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11   | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11   | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20   | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11   | Admin      |
+-----------+------------+-----------+--------+--------------+------------+

// bonus 1 table
+---------------+--------------+------------+
| WORKER_REF_ID | BONUS_AMOUNT | BONUS_DATE |
+---------------+--------------+------------+
|             1 |         5000 | 2016-02-20 |
|             2 |         3000 | 2016-06-11 |
|             3 |         4000 | 2016-02-20 |
|             1 |         4500 | 2016-02-20 |
|             2 |         3500 | 2016-06-11 |
+---------------+--------------+------------+

// title table
+---------------+---------------+---------------+
| WORKER_REF_ID | WORKER_TITLE  | AFFECTED_FROM |
+---------------+---------------+---------------+
|             1 | Manager       | 2016-02-20    |
|             2 | Executive     | 2016-06-11    |
|             8 | Executive     | 2016-06-11    |
|             5 | Manager       | 2016-06-11    |
|             4 | Asst. Manager | 2016-06-11    |
|             7 | Executive     | 2016-06-11    |
|             6 | Lead          | 2016-06-11    |
|             3 | Lead          | 2016-06-11    |
+---------------+---------------+---------------+


1 Write an SQL query to fetch “FIRST_NAME” from Worker table
     using the alias name as <WORKER_NAME>.
	
	select first_name as worker_name   // as is used to display the data by new column name 
	from worker;
    ->  from worker;



2.  Write an SQL query to fetch “FIRST_NAME” from Worker table in
	upper case.

	select upper(first_name)
	from worker;
    ->  from worker;



3.  write an sql query to fetch an unique values of department from worker table

	select distinct department
	from worker;



4. Write an SQL query to print the first three characters
     of FIRST_NAME from Worker table.

	select substr(first_name,1,3) //(x,position,length to select)
	from worker;



5.  write an sql query to find out the position of alphabet 'a' in the first name column 'Amitabh'
	 from worker table

	select instr (first_name,'A') as position_of_a
	from worker
	where first_name='Amitabh';



6.  Write an SQL query to print the FIRST_NAME , departmentname
     from Worker table separated by white space.

	select concat(first_name, concat(' ',department))
	from worker;


7.  Write an SQL query to print the DEPARTMENT from Worker table
	after removing white spaces from the left side.
	
	select ltrim(department)
	from worker;



8.  Write an SQL query that fetches the unique values of DEPARTMENT
	from Worker table and prints its length.

	select distinct department, length(department)
	from worker;



9.  Write an SQL query to print the FIRST_NAME from Worker table
	after replacing ‘a’ with ‘A’.
	
	select replace(first_name,'A','a')
	from worker;



10.  Write an SQL query to print the FIRST_NAME and LAST_NAME
	from Worker table into a single column COMPLETE_NAME. A space
	char should separate them.

	select concat(first_name,concat(' ',last_name)) as complete_name
	from worker;



11.   Write an SQL query to print all Worker details from the Worker
	  table order by FIRST_NAME Ascending. 

	select *
	from worker
	order by first_name;// by default is takes ascending 


	select *
	from worker
	order by first_name desc;



12.  Write an SQL query to print all Worker details from the Worker
	table order by FIRST_NAME Ascending and DEPARTMENT
	Descending.

	select *
	from worker
	order by first_name asc, department desc;



13.  Write an SQL query to print details for Workers with the first
	  name as “Vipul” and “Satish” from Worker table.

	select *
	from worker
	where first_name in ('vipul','satish');



14.  Write an SQL query to print details of workers excluding first
	names, “Vipul” and “Satish” from Worker table.

	select *
	from worker
	where not first_name in ('vipul','satish'); 


15.   Write an SQL query to print details of Workers with
	  DEPARTMENT name as “Admin”.

	select *
	from worker
	where department='admin';



16.   Write an SQL query to print details of the Workers whose
	FIRST_NAME contains ‘a’.

	select *
	from worker
	where first_name like '%a%';




17.   Write an SQL query to print details of the Workers whose
	  FIRST_NAME ends with ‘a’.

	select *
	from worker
	where first_name like '%a';



18.   Write an SQL query to print details of the Workers whose
	  FIRST_NAME ends with ‘h’ and contains six alphabets.

	select *
	from worker
	where first_name like '%h' and length(first_name)=6;



19.   Write an SQL query to print details of the Workers whose
	 SALARY lies between 100000 and 500000.

	select *
	from worker
	where salary between 100000 and 500000;



20.   Write an SQL query to print details of the Workers who have
	 joined in Feb’2014.
	
	select *
	from worker
	where joining_date between '2014-02-01' and '2014-02-28';



21.  Write an SQL query to fetch the count of employees working in
	the department ‘Admin’.

	select count(*) , department
	from worker
	where department='admin';



22.   Write an SQL query to fetch worker names with salaries >= 50000
	 and <= 100000.

	select concat(first_name,concat(' ',last_name)),salary
	from worker
	where salary between 50000 and 100000;




23.   Write an SQL query to fetch the no. of workers for each
	 department in the descending order.

	select count(*),department
	from worker
	group by department 
	order by count(*);
    

24.// Write an SQL query to print details of the Workers who are also
	 Managers.

	select *
	from worker w
	left join title t
	on w.worker_id=t.worker_ref_id
	where t.worker_title='manager';


25.//Write an SQL query to fetch duplicate records having matching
	data in some fields of a table.

	select count(*),department
	from worker
	group by department
	having count(*)>1;



26.// Write an SQL query to show only odd rows from a table.

	

(select first_name, last_name, salary, rownum rn
    from worker
    order by worker_id)
    where  mod (rn, 2) <> 0;



28.// Write an SQL query to clone a new table from another table.

	create table worker1
	as 
	select *
	from worker
	where 1=2;



29.// Write an SQL query to fetch equivalent records of two tables

	
	select*
	from worker w
	inner join title t
	where w.worker_id=t.worker_ref_id;


	select *
	from worker w, bonus1 b
	where w.worker_id=b.worker_ref_id;



30.//Write an SQL query to show records from one table that another
	table does not have.

	select *
	from worker w
	left join bonus1 b
	on w.worker_id=b.worker_ref_id;




31.// Write an SQL query to show the current date and time.

		select first_name,last_name, now() as currentTime
		from worker;


		

	
32.//Write an SQL query to show the top n (say 10) records of a table.

	

	select *
	from worker    
	limit 10;

The LIMIT clause in MySQL is used to limit the number of records returned by a SELECT statement. It allows you to specify the maximum number of records to return, as well as the starting point of the records to return.

		
	select *
	from worker
	limit 3 offset 5;



33.// Write an SQL query to determine the nth (say n=5) highest salary
      from a table

	select *
	from worker
	order by salary
	limit 5;
	



34.  Write an SQL query to determine the 5th highest salary without
	 using TOP or limit method.

	
			select distinct w.salary
			from worker w
			where 5 =(select count(distinct r.salary)
							from worker r
							where r.salary>=w.salary)
			order by w.salary desc;


35.//Write an SQL query to fetch the list of employees with the same
	salary.

						
	select w.first_name,w.salary
	from worker w
	inner join worker r
	on w.salary=r.salary
	where w.first_name<>r.first_name;



	select w.first_name,w.salary
	from worker w
	where w.salary in(select d.salary
			from worker d
			where w.first_name!=d.first_name);




36.// Write an SQL query to show the second highest salary from a
	table.


		select max(salary)
		from worker
		where salary not in   (select max(salary)
							from worker);
							

	select max(salary)
	from worker = 500000  // i.e inner query fetches the max sal from worker 500000 
						  outer query fetches max salary which is not 500000 i.e highest seconmost salary of worker



37.// Write an SQL query to show one row twice in results from a table.


select w.worker_id,w.first_name,w.salary
from worker w
union all
select r.worker_id,r.first_name,r.salary
from worker r
order by worker_id;




38.// Write an SQL query to fetch intersecting records of two tables

select w.first_name,w.last_name,w.salary
from worker w
inner join worker r
on w.worker_id=r.worker_id;



39.// Write an SQL query to fetch the first 50% records from a table

 
	
		
						


40.// Write an SQL query to fetch the departments that have less than
	 five people in it.

	select count(*), department
	from worker
	group by department
	having count(*) < 5;




41.// Write an SQL query to show all departments along with the
      number of people in there.

	select count(*) as no_of_people, department
	from worker
	group by department;




42.// Write an SQL query to show the last record from a table.

	select *
	from worker
	limit 8 offset 7;
	



43.//Write an SQL query to fetch the first row of a table

	select *
	from worker
	limit 1;



44.// Write an SQL query to fetch the last five records from a table.

	select *
	from worker
	limit 8 offset 3;


						
45.// Write an SQL query to print the name of employees having the
	highest salary in each department.

	


			select first_name,last_name,salary,department
			from worker
			where salary in            (select max(salary)
									from worker
									group by department);





46.// Write an SQL query to fetch three max salaries from a table

	select salary                                     	select distinct salary
	from worker									from worker
	order by salary desc							order by salary desc // for fetching max 3 salaries of distinct data
												limit 3;
												 

	select salary
	from worker
	order by salary desc
	limit 3;
	


47.// Write an SQL query to fetch three min salaries from a table.

	select distinct salary
	from worker
	order by salary desc // from this query we find total distinct rows of min salary which is 7
	limit 7 offset 4;    // by limit 7 offset 4 we select last 3 min salary rows only	




48.// Write an SQL query to fetch 5th max salaries from a table.


	select salary,first_name, last_name
	from worker
	order by salary desc
	limit 5;



49.// Write an SQL query to fetch departments along with the total
      salaries paid for each of them.

	select sum(salary)as total_salary,department
	from worker
	group by department;




50.// Write an SQL query to fetch the names of workers who earn the
      highest salary.

	select first_name,last_name
	from worker
	where salary=			(select max(salary)
						from worker);
						

		
select first_name
from worker
where salary=
(select max(salary)
from worker);



									
									

	


